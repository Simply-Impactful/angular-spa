/* You can add global styles to this file, and also import other style files */

@import '~@angular/material/theming';
// Plus imports for other components in your app.
// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!

$custom-typography: mat-typography-config( $font-family: 'Quicksand, monospace', $headline: mat-typography-level(32px, 48px, 700), $body-1: mat-typography-level(16px, 24px, 500));
// Override typography CSS classes (e.g., mat-h1, mat-display-1, mat-typography, etc.).
@include mat-base-typography($custom-typography);
// Override typography for a specific Angular Material components.
@include mat-checkbox-typography($custom-typography);
// Override typography for all Angular Material, including mat-base-typography and all components.
@include angular-material-typography($custom-typography);
/*Color themes */

@include mat-core();
// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
//@function mat-palette($base-palette, $default: 500, $lighter: 100, $darker: 700) {
$candy-app-primary: mat-palette($mat-teal, 300, A100, A700); // $mat-cyan / $mat-green
$candy-app-accent: mat-palette($mat-green, 300, 300, 700);
// The warn palette is optional (defaults to red).
$candy-app-warn: mat-palette($mat-red);
// Create the theme object (a Sass map containing all of the palettes).
$candy-app-theme: mat-light-theme($candy-app-primary, $candy-app-accent, $candy-app-warn);
// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.

@include angular-material-theme($candy-app-theme);
// Define an alternate blue theme.
$blue-primary: mat-palette($mat-blue, 700, 700, 900);
$blue-accent : mat-palette($mat-light-blue, 200, 200, A400);
$blue-warn : mat-palette($mat-deep-orange);
$blue-theme : mat-dark-theme($blue-primary, $blue-accent, $blue-warn);
// Include the alternative theme styles inside of a block with a CSS class. You can make this
// CSS class whatever you want. In this example, any component inside of an element with
// `.blue-theme` will be affected by this alternate dark theme instead of the default theme.
.blue-theme {
    @include angular-material-theme($blue-theme);
}

body {
    display: flex;
    flex-direction: column;
    text-align: center;
}

button.mat-primary.mat-raised-button {
    color: white !important;
}

.spacer {
    flex: 1 1 auto;
}